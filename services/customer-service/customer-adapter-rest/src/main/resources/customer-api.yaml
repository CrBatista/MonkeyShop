openapi: 3.0.0
info:
  version: 1.0.0
  title: Auth Service API

tags:
  - name: customer

security:
  - bearerAuth: []

paths:
  /customer:
    post:
      summary: Create Customer
      operationId: createCustomer
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerRequest"
      security:
        - bearerAuth: [ ]
      responses:
        "201":
          description: Customer was created
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Retrieve Customers
      operationId: findCustomers
      security:
        - bearerAuth: [ ]
      tags:
        - customer
      responses:
        "200":
          description: Retrieve all customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /customer/{customerId}:
    put:
      summary: Update Customer
      operationId: updateCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
      security:
        - bearerAuth: [ ]
      tags:
        - customer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCustomerRequest"
      responses:
        "201":
          description: Update request was accepted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      summary: Delete Customer
      operationId: deleteCustomer
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/customerId'
      tags:
        - customer
      responses:
        "200":
          description: Delete request was accepted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Retrieve Customer Details
      operationId: findCustomer
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/customerId'
      tags:
        - customer
      responses:
        "200":
          description: Returns Customer Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerDetails"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      name: Authorization
      in: header
  responses:
    DefaultErrorResponse:
      description: Unexpected error
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"
  parameters:
    customerId:
      name: customerId
      in: path
      description: User ID
      required: true
      schema:
        type: string
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        photoUrl:
          type: string
    CustomerDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        photoUrl:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        lastEvent:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/CustomerHistoryDetails'
    CustomerHistoryDetails:
      type: object
      properties:
        type:
          type: string
        timestamp:
          type: string
          format: date-time
        name:
          type: string
        surname:
          type: string
        photoUrl:
          type: string
        author:
          type: string
    CreateCustomerRequest:
      type: object
      required:
        - name
        - surname
      properties:
        name:
          type: string
        surname:
          type: string
    UpdateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string