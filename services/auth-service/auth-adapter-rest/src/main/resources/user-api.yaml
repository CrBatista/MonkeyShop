openapi: 3.0.0
info:
  version: 1.0.0
  title: Auth Service API

tags:
  - name: auth

security:
  - bearerAuth: []

paths:
  /auth/user:
    post:
      summary: Create User
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      security:
        - bearerAuth: [ ]
      responses:
        "201":
          description: User was created
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: List Users
      operationId: findUsers
      tags:
        - user
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Retrieve all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /auth/user/{userId}:
    put:
      summary: Update User
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userId'
      security:
        - bearerAuth: [ ]
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: Update request was ok
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      summary: Delete User
      operationId: deleteUser
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/userId'
      tags:
        - user
      responses:
        "200":
          description: Delete request was accepted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Retrieve User Details
      operationId: findUser
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/userId'
      tags:
        - user
      responses:
        "200":
          description: Returns User Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetails"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      name: Authorization
      in: header
  parameters:
    userId:
      name: userId
      in: path
      description: User ID
      required: true
      schema:
        type: string
  responses:
    DefaultErrorResponse:
      description: Unexpected error
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"

  schemas:
    CreateUserRequest:
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
    UserDetails:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        role:
          type: string
        email:
          type: string
        createdBy:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedBy:
          type: string
        updatedAt:
          type: string
          format: date-time
        lastEvent:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/UserHistoryDetails'
    UserHistoryDetails:
      type: object
      properties:
        type:
          type: string
        timestamp:
          type: string
          format: date-time
        username:
          type: string
        role:
          type: string
        email:
          type: string
        author:
          type: string
    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string